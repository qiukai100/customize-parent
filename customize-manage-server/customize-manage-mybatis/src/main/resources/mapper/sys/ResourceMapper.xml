<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.customize.mybatis.mapper.sys.ResourceMapper">
    <resultMap id="BaseResultMap" type="com.customize.domain.entity.sys.Resource"
               extends="com.customize.mybatis.core.BaseMapper.BaseResultMap">
        <id column="pk_resource_id" jdbcType="varchar" property="pkResourceId" />
                            <result column="resource_type" jdbcType="varchar" property="resourceType" />                                         <result column="resource_name" jdbcType="varchar" property="resourceName" />                                         <result column="resource_path" jdbcType="varchar" property="resourcePath" />                                         <result column="permission" jdbcType="varchar" property="permission" />                                         <result column="fk_project_id" jdbcType="varchar" property="fkProjectId" />                                         <result column="sr_resource_id" jdbcType="varchar" property="srResourceId" />                                         <result column="sr_resource_id_path" jdbcType="varchar" property="srResourceIdPath" />                                         <result column="is_top" jdbcType="tinyint" property="isTop" />                                         <result column="open_type" jdbcType="varchar" property="openType" />                                         <result column="resource_icon" jdbcType="varchar" property="resourceIcon" />                                         <result column="sort" jdbcType="int" property="sort" />                                                                                                                                                                     </resultMap>

    <resultMap id="DtoResultMap" type="com.customize.domain.dto.sys.ResourceDto"
               extends="BaseResultMap">

    </resultMap>

    <sql id="Base_Column_List">
                            resource_type,                                         resource_name,                                         resource_path,                                         permission,                                         fk_project_id,                                         sr_resource_id,                                         sr_resource_id_path,                                         is_top,                                         open_type,                                         resource_icon,                                         sort,                                                                                                                         data_status,                                                             version,                             <include refid="com.customize.mybatis.core.BaseMapper.Base_Column_List" />
    </sql>

    <update id="removeByPrimaryKey" parameterType="Map">
        update sys_resource set is_delete = #{isDelete} where pk_resource_id = #{pkResourceId}
    </update>

    <update id="removeResourceBatch" parameterType="Map">
        update sys_resource set is_delete = #{isDelete} where pk_resource_id in
        <foreach item="pkResourceId" collection="pkResourceIds" separator="," open="(" close=")">
            #{pkResourceId}
        </foreach>
    </update>

    <delete id="deleteResourceBatch" parameterType="String">
        delete from sys_resource where pk_resource_id in
        <foreach item="pkResourceId" collection="pkResourceIds" separator="," open="(" close=")">
            #{pkResourceId}
        </foreach>
    </delete>

    <select id="queryResourceList" resultMap="DtoResultMap">
        select <include refid="Base_Column_List" /> from sys_resource
        <where>
            <if test="resourceVo.isDelete != null">
                is_delete = #{resourceVo.isDelete}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectResourceList" resultMap="DtoResultMap">
        select <include refid="Base_Column_List" /> from sys_resource
        <where>
            <if test="isDelete != null">
                is_delete = #{isDelete}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="findById" resultMap="DtoResultMap">
        select <include refid="Base_Column_List" /> from sys_resource
        where pk_resource_id = #{pkResourceId}
        <if test="isDelete != null">
            and is_delete = #{isDelete}
        </if>
    </select>

</mapper>