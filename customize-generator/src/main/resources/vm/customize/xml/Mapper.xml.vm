<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${params.mapperPackage}.mapper.${moduleName}.${className}Mapper">
    <resultMap id="BaseResultMap" type="${params.domainPackage}.entity.${moduleName}.${className}"
               extends="${params.mapperPackage}.core.BaseMapper.BaseResultMap">
        <id column="${primaryKey.columnName}" jdbcType="${primaryKey.dataType}" property="${primaryKey.attrname}" />
        #foreach ($column in $columns)
            #if($column.attrname != 'createTime' && $column.attrname != 'updateTime'
                && $column.attrname != 'createId' && $column.attrname != 'updateId'
                && $column.attrname != 'isDelete' && $column.attrname != 'dataStatus'
                && $column.attrname != 'version')
        <result column="$column.columnName" jdbcType="$column.dataType" property="$column.attrname" /> ##
            #end
        #end
    </resultMap>

    <resultMap id="DtoResultMap" type="${params.domainPackage}.dto.${moduleName}.${className}Dto"
               extends="BaseResultMap">

    </resultMap>

    <sql id="Base_Column_List">
        #foreach ($column in $columns)
            #if($column.attrname != 'createTime' && $column.attrname != 'updateTime'
            && $column.attrname != 'createId' && $column.attrname != 'updateId' && $column.attrname != 'isDelete')
        $column.columnName, ##
            #end
        #end
        <include refid="${params.mapperPackage}.core.BaseMapper.Base_Column_List" />
    </sql>

    <update id="removeByPrimaryKey" parameterType="Map">
        update ${tableName} set is_delete = #{isDelete} where ${primaryKey.columnName} = #{${primaryKey.attrname}}
    </update>

    <update id="remove${className}Batch" parameterType="Map">
        update ${tableName} set is_delete = #{isDelete} where ${primaryKey.columnName} in
        <foreach item="${primaryKey.attrname}" collection="${primaryKey.attrname}s" separator="," open="(" close=")">
            #{${primaryKey.attrname}}
        </foreach>
    </update>

    <delete id="delete${className}Batch" parameterType="${primaryKey.attrType}">
        delete from ${tableName} where ${primaryKey.columnName} in
        <foreach item="${primaryKey.attrname}" collection="${primaryKey.attrname}s" separator="," open="(" close=")">
            #{${primaryKey.attrname}}
        </foreach>
    </delete>

    <select id="query${className}List" resultMap="DtoResultMap">
        select <include refid="Base_Column_List" /> from ${tableName}
        <where>
            <if test="${classname}Vo.isDelete != null">
                is_delete = #{${classname}Vo.isDelete}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="select${className}List" resultMap="DtoResultMap">
        select <include refid="Base_Column_List" /> from ${tableName}
        <where>
            <if test="isDelete != null">
                is_delete = #{isDelete}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="findById" resultMap="DtoResultMap">
        select <include refid="Base_Column_List" /> from ${tableName}
        where ${primaryKey.columnName} = #{${primaryKey.attrname}}
        <if test="isDelete != null">
            and is_delete = #{isDelete}
        </if>
    </select>

</mapper>